// Generated by CoffeeScript 1.7.1
var activateTopic, brandTemplate, calculateSectionAndContainerSize, countryTemplate, getParameterByName, handleScrollingStores, hideAddressBar, initTopicHome, initTopicStores, initVideoControls, jobFeedUrl, lazyLoadImages, scrollPage, singleJobTemplate, stateTemplate, unbindScrollDetect;

window.ar = {
  width: null,
  height: null,
  navigationHeight: 140,
  currentTopic: "home",
  location: window.location.href,
  topics: {
    stores: {
      galleries: {},
      currentSection: null
    },
    shine: {
      currentSection: null
    },
    fit: {
      currentSection: null
    }
  },
  mousewheel: false
};

hideAddressBar = function() {
  if (!is_mobile) {
    return;
  }
  return setTimeout((function() {
    return window.scrollTo(0, 1);
  }), 50);
};

if (window.addEventListener) {
  window.addEventListener("load", function() {
    return hideAddressBar();
  });
  window.addEventListener("orientationchange", function() {
    if (is_ipad) {
      window.location.reload();
    }
    if (is_smartphone) {
      return calculateSectionAndContainerSize(true);
    }
  });
}

calculateSectionAndContainerSize = function(force) {
  var $sectionsWrapper, topicSectionHeight, windowHeight, windowWidth;
  if (force == null) {
    force = false;
  }
  windowHeight = $(window).height();
  windowWidth = $(window).width();
  if (window.ar.width !== windowWidth) {
    window.ar.width = windowWidth;
    $(".topic, #home").width(windowWidth);
  }
  if (window.ar.height !== windowHeight || force) {
    window.ar.height = windowHeight;
    topicSectionHeight = windowHeight - window.ar.navigationHeight;
    if (window.ar.currentTopic === "home") {
      $("#home").css({
        'height': window.ar.height
      });
    }
    if (window.ar.currentTopic === "stores") {
      if (!is_smartphone) {
        $(".topic-section").css({
          'height': topicSectionHeight + 50
        });
      }
    }
    if (window.ar.currentTopic === "shine") {
      if (!is_smartphone) {
        $(".topic-section").css({
          'height': topicSectionHeight + 100
        });
      }
    }
    if (window.ar.currentTopic === "fit") {
      if (is_smartphone) {
        return;
      }
      $sectionsWrapper = $(".sections-wrapper");
      $sectionsWrapper.css({
        'height': topicSectionHeight
      });
      $("#topic-fit .topic-section").each(function() {
        var $section;
        $section = $(this);
        return $section.css({
          width: windowWidth / 4
        }).data({
          "initial-width": windowWidth / 4
        });
      });
      $("#topic-fit .topic-section .preview").each(function() {
        var $preview;
        $preview = $(this);
        return $preview.css({
          top: $sectionsWrapper.height() - $preview.height()
        }).data({
          "initial-top": $sectionsWrapper.height() - $preview.height(),
          "initial-height": $preview.height()
        });
      });
    }
    if (window.ar.currentTopic === "jobs") {
      return $("#topic-jobs").css({
        'min-height': window.ar.height
      });
    }
  }
};

initVideoControls = function() {
  return $(".fancybox").fancybox({
    maxWidth: 980,
    maxHeight: 553,
    padding: 0,
    fitToView: false,
    width: "90%",
    height: "90%",
    autoSize: false,
    closeClick: false,
    openEffect: "none",
    closeEffect: "none"
  });
};

initTopicHome = function() {
  var $gallery, $position, newGallery;
  window.ar.currentTopic = "home";
  calculateSectionAndContainerSize(true);
  $("body").removeClass().addClass("topic-home");
  $("#topics-nav").addClass("bottom");
  $("#topics-nav li[data-topic='home']").addClass("active").siblings().removeClass();
  $gallery = $("#home-gallery");
  $position = $gallery.find(".position");
  newGallery = new Swipe($gallery[0], {
    startSlide: 0,
    speed: 500,
    continuous: true,
    auto: 5000
  });
  return initVideoControls();
};

initTopicStores = function() {
  var section;
  activateTopic("stores");
  calculateSectionAndContainerSize(true);
  $("#topic-stores").on("activate", ".topic-section", function(event, originalEvent) {
    var $section, $topicTarget, progress, sectionId;
    $section = $(this);
    sectionId = $section.data("section");
    window.ar.topics.stores.currentSection = sectionId;
    if (originalEvent === void 0) {
      originalEvent = event;
    }
    $("#topic-stores-footer li[data-section='" + sectionId + "']").addClass("active").siblings().removeClass();
    if (originalEvent.type === "click" || originalEvent === "initFromHash") {
      unbindScrollDetect();
      scrollPage($section.offset().top - window.ar.navigationHeight, function() {
        if (Modernizr.history && originalEvent.type === "click") {
          history.pushState(sectionId, "STORES - #" + (sectionId.toUpperCase()), "#" + sectionId);
        }
        return handleScrollingStores();
      });
    }
    $topicTarget = $("article#topic-stores");
    $topicTarget.removeClass("non-active");
    $("#topics-nav li[data-topic='stores']").addClass("active").siblings().removeClass("active");
    $("body").removeClass().addClass("section topic-stores");
    if ($("#topics-nav").hasClass("bottom")) {
      $("#topics-nav").removeClass("bottom");
    }
    progress = $section.data("progress");
    return $("#topics-nav li.active").removeClass().addClass("active " + progress);
  });
  if (window.location.hash !== "") {
    section = window.location.hash.replace("#", "");
    $("#topic-stores div[data-section='" + section + "']").trigger("activate", "initFromHash");
  } else {
    $("#topic-stores div:first").trigger("activate", jQuery.Event("click"));
  }
  if (Modernizr.history) {
    window.removeEventListener("popstate", function() {});
    window.addEventListener("popstate", function(event) {
      if (event.state !== null) {
        unbindScrollDetect();
        return $("#topic-stores div[data-section='" + event.state + "']").trigger("activate", "initFromHash");
      }
    });
  }
  $(".slideshow .wrapper").each(function() {
    var $gallery, $position, newGallery, slide, slideIndex, _fn, _i, _len, _ref;
    $gallery = $(this);
    $position = $gallery.find(".position");
    newGallery = new Swipe($gallery[0], {
      startSlide: 0,
      speed: 500,
      continuous: true,
      auto: 5000,
      callback: function(index, elem) {
        return $position.find("em:eq(" + index + ")").addClass("active").siblings().removeClass();
      }
    });
    window.ar.topics.stores.galleries["" + ($gallery.attr("id"))] = newGallery;
    _ref = newGallery.slides;
    _fn = function(slide, slideIndex) {
      var newElement;
      newElement = $("<em>").click(function() {
        return window.ar.topics.stores.galleries["" + ($gallery.attr("id"))].slide(slideIndex, 500);
      });
      return $position.append(newElement);
    };
    for (slideIndex = _i = 0, _len = _ref.length; _i < _len; slideIndex = ++_i) {
      slide = _ref[slideIndex];
      _fn(slide, slideIndex);
    }
    return $position.find("em:eq(0)").addClass("active");
  });
  $("#topic-stores-footer a").on("click", function(event) {
    event.preventDefault();
    event.stopPropagation();
    return $("#topic-stores div[data-section='" + ($(this).data("section")) + "']").trigger("activate", event);
  });
  setTimeout((function() {
    return $("#topic-stores-footer").addClass("is-visible");
  }), 1000);
  return initVideoControls();
};

unbindScrollDetect = function() {
  return $(".scroll-detect").off("inview");
};

handleScrollingStores = function() {
  if (is_mobile) {
    window.onscroll = function() {
      return $("#topic-stores .topic-section").each(function() {
        var $section;
        $section = $(this);
        if ($(window).scrollTop() >= $section.offset().top - ($(window).height() / 2)) {
          return $section.trigger("activate", event);
        }
      });
    };
    return;
  }
  return setTimeout((function() {
    return $(".scroll-detect").on("inview", function(event, isInView, topOrBottomOrBoth) {
      if (isInView && topOrBottomOrBoth === "both") {
        $(this).addClass("on");
        return $(this).parent().trigger("activate", event);
      } else {
        return $(this).removeClass("on");
      }
    });
  }), 500);
};

activateTopic = function(topicTarget, callingContext) {
  var $topicTarget;
  if (callingContext == null) {
    callingContext = {};
  }
  if (topicTarget === window.ar.currentTopic) {
    return;
  }
  hideAddressBar();
  unbindScrollDetect();
  window.ar.currentTopic = topicTarget;
  $topicTarget = $("article#topic-" + topicTarget);
  $("#topics-nav li[data-topic='" + topicTarget + "']").addClass("active").siblings().removeClass("active");
  $("body").removeClass().addClass("section topic-" + topicTarget);
  if (topicTarget !== "home") {
    return $("#topics-nav").removeClass("bottom");
  } else {
    return $("#topics-nav").addClass("bottom");
  }
};

lazyLoadImages = function() {
  if (!Modernizr.inlinesvg) {
    return $("span.svg-image").each(function() {
      var $image, $span;
      $span = $(this);
      $image = $("<img>");
      $image.attr({
        src: $span.data("source-png"),
        width: $span.width(),
        height: $span.height()
      });
      return $span.replaceWith($image);
    });
  }
};

scrollPage = function(offset, callback) {
  if (is_webkit) {
    return $("body").animate({
      scrollTop: offset
    }, 300, function() {
      if (callback != null) {
        return callback();
      }
    });
  } else {
    return $("body, html").animate({
      scrollTop: offset
    }, 300, function() {
      if (callback != null) {
        return callback();
      }
    });
  }
};

$(document).ready(function() {
  var path, runApp, selectedLanguage;
  runApp = true;
  if (typeof window.onorientationchange !== "undefined") {
    if (is_ipad && (window.orientation === 0 || window.orientation === 180)) {
      $(".ipad-change-orientation-message").width($(window).width()).height($(window).height()).show();
      runApp = false;
    }
  }
  if (!runApp) {
    if ($("body").hasClass("topic-jobs")) {
      $("#header, #topics-nav").remove();
    } else {
      $("#main, #header, #topics-nav").remove();
    }
    return;
  }
  calculateSectionAndContainerSize();
  $("#header .logos a").on("click", function(event) {
    var sectionId;
    event.preventDefault();
    sectionId = $(this).data("section");
    if (window.ar.currentTopic !== "stores") {
      return $.pjax({
        container: "#main",
        url: $(this).attr("href"),
        complete: function() {
          return $("#topic-stores div[data-section='" + sectionId + "']").trigger("activate", event);
        }
      });
    } else {
      return $("#topic-stores div[data-section='" + sectionId + "']").trigger("activate", event);
    }
  });
  $("a[data-pjax]").on("click", function(event) {
    return $("#main").addClass("is-loading");
  }).pjax({
    container: "#main"
  });
  $("#main").on("pjax:start", function() {
    return window.location.hash = "";
  });
  $("#main").on("pjax:complete", function() {
    lazyLoadImages();
    return setTimeout((function() {
      return $("#main").removeClass("is-loading");
    }), 500);
  });
  $("#topics-nav").hover((function() {
    return $(this).addClass("hover");
  }), function() {
    return $(this).removeClass("hover");
  });
  $("#sharing-imprint .close").on("click", function() {
    return $("#sharing-imprint").removeClass("is-open");
  });
  $("#open-sharing-imprint").on("click", function() {
    return $("#sharing-imprint").addClass("is-open");
  });
  path = location.pathname.substring(1);
  selectedLanguage = path.substring(0, path.indexOf('index.html'));
  if (selectedLanguage === "") {
    $("#language-picker span").html('en');
  } else {
    $("#language-picker span").html(selectedLanguage);
  }
  $("#language-picker").hover((function() {
    return $(this).find("div").css({
      height: $("#language-picker li").length * 40
    });
  }), function() {
    return $(this).find("div").css({
      height: 0
    });
  });
  $("#language-picker li").click(function(event) {
    $(this).parent().parent().parent().find("span").html($(this).html());
    $(this).parent().parent().css({
      height: 0
    });
    if ($(this).data('language').toLowerCase() === "en") {
      return window.location.href = "index.html";
    } else {
      return window.location.href = "/" + ($(this).data('language').toLowerCase());
    }
  });
  lazyLoadImages();
  if (!is_mobile) {
    return window.onresize = function(event) {
      return calculateSectionAndContainerSize(true);
    };
  }
});

window.initTopicFit = function() {
  var section;
  activateTopic("fit");
  calculateSectionAndContainerSize(true);
  if (is_mobile) {
    $("#topic-fit img[width]").removeAttr("width").removeAttr("height");
  }
  $("#topic-fit").on("shrink", ".topic-section", function(event, options) {
    var $preview, $section, scrollLeft;
    if (is_smartphone) {
      return;
    }
    $section = $(this);
    $section.scrollTop(0);
    $section.removeClass("is-open").css({
      width: $section.data("initial-width")
    }).siblings().removeClass("other-is-open next");
    $preview = $section.find(".preview");
    $preview.css({
      height: $preview.data("initial-height")
    });
    $preview.css({
      top: $preview.data("initial-top")
    });
    $section.find(".fancybox").addClass("animation-delay-dummy").delay(700).queue(function(next) {
      $(this).removeClass("fast").addClass("slow");
      return next();
    });
    if (options.scrollViewPort) {
      $("#topics-nav li.active").removeClass().addClass("active");
      scrollLeft = 0;
      return $("#topic-fit").animate({
        scrollLeft: scrollLeft
      }, 300);
    }
  });
  $("#topic-fit").on("expand", ".topic-section", function(event) {
    var $preview, $section, $sectionsWrapper, minPreviewHeight, progress, sectionWidth;
    if (is_smartphone) {
      return;
    }
    minPreviewHeight = 725;
    $section = $(this);
    $sectionsWrapper = $section.parent();
    $preview = $section.find(".preview");
    sectionWidth = $(window).width() - 100;
    if ($section.data("section") === "level1" || $section.data("section") === "level4") {
      sectionWidth += 50;
    }
    $section.css({
      width: sectionWidth,
      height: $sectionsWrapper.height()
    });
    $section.addClass("is-open").trigger("shiftFit").siblings(".is-open").trigger("shrink", {
      scrollViewPort: false
    });
    $section.siblings(":not(.is-open)").addClass("other-is-open").find(".preview").removeClass("is-not-hovered");
    $section.next().addClass("next");
    progress = $section.data("progress");
    $("#topics-nav li.active").removeClass().addClass("active " + progress);
    if (Modernizr.history) {
      if (history.state !== $section.data("section")) {
        return history.pushState($section.data("section"), "FIT - #" + ($section.data("section").toUpperCase()), "#" + ($section.data("section")));
      }
    }
  });
  $("#topic-fit").on("shiftFit", ".topic-section", function(event, originalEvent) {
    var $section, offset, sectionWidth;
    if (is_smartphone) {
      return;
    }
    $section = $(this);
    sectionWidth = $section.data("initial-width");
    offset = sectionWidth * $section.attr("data-shift-multiplier");
    if ($section.attr("data-section") !== "level1") {
      offset -= 50;
    }
    return $("#topic-fit").delay(50).animate({
      scrollLeft: offset
    }, 300);
  });
  $("#topic-fit .preview").on("click", function(event) {
    if (is_smartphone) {
      return;
    }
    if (!$(this).parent().hasClass("is-open")) {
      return $(this).parent().trigger("expand");
    }
  });
  $("#topic-fit a[data-section]").on("click", function(event) {
    event.stopPropagation();
    event.preventDefault();
    if (is_smartphone) {
      return $(window).scrollTop($(this).closest(".topic-section").next().position().top);
    } else {
      return $(this).closest(".topic-section").next().trigger("expand");
    }
  });
  $("#topic-fit .preview").hover((function() {
    if (is_mobile) {
      return;
    }
    if (!$(this).parent().hasClass("is-open")) {
      return $(this).parent().siblings(":not(.is-open)").find(".preview").addClass("is-not-hovered");
    }
  }), function() {
    return $(this).parent().siblings(":not(.is-open)").find(".preview").removeClass("is-not-hovered");
  });
  $("#topic-fit .close").on("click", function(event) {
    var $section;
    event.preventDefault();
    event.stopPropagation();
    $section = $(this).closest(".topic-section");
    $section.trigger("shrink", {
      scrollViewPort: true
    });
    if (Modernizr.history) {
      return history.pushState(null, "FIT", "/fit");
    }
  });
  if (window.location.hash !== "") {
    section = window.location.hash.replace("#", "");
    $("#topic-fit .topic-section[data-section='" + section + "']").trigger("expand");
  }
  if (Modernizr.history) {
    window.removeEventListener("popstate", function() {});
    window.addEventListener("popstate", function(event) {
      if (event.state === null && window.location.hash === "") {
        return $("#topic-fit .topic-section.is-open").trigger("shrink", {
          scrollViewPort: true
        });
      } else {
        return $("#topic-fit .topic-section[data-section='" + event.state + "']").trigger("expand");
      }
    });
  }
  return initVideoControls();
};


/*
author Remy Sharp
url http://remysharp.com/2009/01/26/element-in-view-event-plugin/
 */

(function($) {
  var check_inview, getViewportHeight, offsetTop;
  getViewportHeight = function() {
    var height, mode;
    height = window.innerHeight;
    if (height) {
      return height;
    }
    mode = document.compatMode;
    if (mode || !$.support.boxModel) {
      height = (mode === "CSS1Compat" ? document.documentElement.clientHeight : document.body.clientHeight);
    }
    return height;
  };
  offsetTop = function(debug) {
    var curtop, obj;
    curtop = 0;
    obj = debug;
    while (obj !== null) {
      curtop += obj.offsetTop;
      obj = obj.offsetParent;
    }
    return curtop;
  };
  check_inview = function() {
    var elems, scrolltop, vpH;
    vpH = getViewportHeight();
    scrolltop = (window.pageYOffset ? window.pageYOffset : (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop));
    elems = [];
    $.each($.cache, function() {
      if (this.events && this.events.inview) {
        return elems.push(this.handle.elem);
      }
    });
    if (elems.length) {
      return $(elems).each(function() {
        var $el, height, inview, top, visPart;
        $el = $(this);
        top = offsetTop(this);
        height = $el.height();
        inview = $el.data("inview") || false;
        if (scrolltop > (top + height) || scrolltop + vpH < top) {
          if (inview) {
            $el.data("inview", false);
            return $el.trigger("inview", [false]);
          }
        } else if (scrolltop < (top + height)) {
          visPart = (scrolltop > top ? "bottom" : ((scrolltop + vpH) < (top + height) ? "top" : "both"));
          if (!inview || inview !== visPart) {
            $el.data("inview", visPart);
            return $el.trigger("inview", [true, visPart]);
          }
        }
      });
    }
  };
  $(window).scroll(check_inview);
  $(window).resize(check_inview);
  $(window).click(check_inview);
  return $(function() {
    return check_inview();
  });
})(jQuery);

_.templateSettings = {
  interpolate: /\{\{(.+?)\}\}/g,
  escape: /\{\{\{(.+?)\}\}\}/g
};

window.jobList = [];

jobFeedUrl = "adidasretailjobs.json";

singleJobTemplate = '<li data-jobtitle="{{{ jobtitle }}} {{{ brand }}} {{{ city }}}" data-country="{{{ country }}}" data-city="{{{ city }}}" data-state="{{{ state }}}" data-url="{{ url }}" data-brand="{{{ brand }}}" data-date="{{ creationDateTS }}"><ul> <li class="jobtitle">{{{ jobtitle }}}</li> <li class="brand">{{{ brand }}}</li> <li class="city">{{{ city }}}</li> <li class="creationdate">{{ creationdate }}</li></ul></li>';

countryTemplate = '<li data-country-text="{{ value }}">{{ value }}</li>';

brandTemplate = '<li data-brand-text="{{ value }}">{{ value }}</li>';

stateTemplate = '<li data-state-text="{{ value }}">{{ value }}</li>';

getParameterByName = function(name) {
  var regex, regexS, results;
  name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
  regexS = "[\\?&]" + name + "=([^&#]*)";
  regex = new RegExp(regexS);
  results = regex.exec(window.location.search);
  if (results == null) {
    return "";
  } else {
    return decodeURIComponent(results[1].replace(/\+/g, " "));
  }
};

window.initTopicJobs = function() {
  var $allJobs, emptyJob;
  activateTopic("jobs");
  calculateSectionAndContainerSize(true);
  if (is_smartphone) {
    return;
  }
  scrollPage(0);
  window.onscroll = function() {
    return $("#topics-nav .active .progress span").width("" + ($(window).scrollTop() / ($(document).height() - $(window).height()) * 100) + "%");
  };
  emptyJob = {
    brand: null,
    city: null,
    country: null,
    creationdate: null,
    jobtitle: null,
    url: null
  };
  $allJobs = $("#topic-jobs");
  $allJobs.find("form").submit(function(event) {
    var $form;
    event.preventDefault();
    event.stopPropagation();
    event.preventDefault();
    $form = $(this);
    $allJobs.find(".error").hide();
    $allJobs.find(".no-results").hide();
    $allJobs.find("ol > li:not(.header)").remove();
    return $.ajax({
      url: jobFeedUrl,
      type: "GET",
      dataType: "JSON",
      success: function(jobs_, textStatus, xhr) {
        var brands, countries, jobs;
        $allJobs.find(".loading").hide();
        jobs = [];
        $allJobs.find(".submit").val("search");
        window.jobs = jobs_;
        countries = _.union(_.pluck(jobs_, "country")).sort();
        _.each(countries, function(country) {
          var countryCompiled, states;
          if (country === "China (Peoples Republic of)") {
            country = "China";
          }
          if (country !== '') {
            countryCompiled = _.template(countryTemplate, {
              value: country
            });
          }
          $allJobs.find(".countries").append(countryCompiled);
          if (country === "United States") {
            states = _.union(_.pluck(_.where(window.jobs, {
              country: "United States"
            }), "state")).sort();
            return _.each(states, function(state) {
              var stateCompiled;
              if (state !== '') {
                stateCompiled = _.template(stateTemplate, {
                  value: state
                });
              }
              return $allJobs.find(".states").append(stateCompiled);
            });
          }
        });
        brands = _.union(_.pluck(jobs_, "brand")).sort();
        _.each(brands, function(brand) {
          var brandCompiled;
          if (brand !== '') {
            brandCompiled = _.template(brandTemplate, {
              value: brand
            });
          }
          return $allJobs.find(".brands").append(brandCompiled);
        });
        $.each(jobs_, function(jobIndex, job_) {
          var compiled, job;
          if (job_.jobTitle !== undefined) {
            job_.jobtitle = job_.jobTitle;
            delete job_.jobTitle;
          }
          if (job_.creationDate !== undefined) {
            job_.creationdate = job_.creationDate;
            delete job_.creationDate;
          }
          job = $.extend(emptyJob, job_);
          compiled = _.template(singleJobTemplate, job);
          return $allJobs.find(".jobs").append(compiled);
        });
        return $allJobs.trigger("initUX");
      },
      error: function(xhr, textStatus, errorThrown) {
        $allJobs.find(".submit").val("search");
        $allJobs.find(".loading").hide();
        return $allJobs.find(".error").show();
      }
    });
  }).trigger("submit");
  $allJobs.on("filter", function() {
    var brand, country, keyword, reBrand, reCountry, reKeyword, reState, state;
    $allJobs.find(".jobs > li:not(.header)").hide();
    keyword = $("#keyword").val();
    if (keyword === "Keyword (e.g. Team Leader)") {
      keyword = "";
    }
    reKeyword = RegExp(keyword, "i");
    country = $("#select_country").attr("data-country-text");
    reCountry = RegExp(country, "i");
    state = $("#select_state").attr("data-state-text");
    reState = RegExp(state, "i");
    brand = $("#select_brand").attr("data-brand-text");
    if (brand === void 0) {
      brand = "";
    }
    reBrand = RegExp(brand, "i");
    return $allJobs.find(".jobs > li").filter(function() {
      return reKeyword.test($(this).attr("data-jobtitle")) && reBrand.test($(this).attr("data-brand")) && reCountry.test($(this).attr("data-country")) && reState.test($(this).attr("data-state"));
    }).show();
  });
  $allJobs.on("initUX", function() {
    var brand;
    $("#keyword").keyup(function(event) {
      return $allJobs.find("form").trigger("filter");
    });
    $("#select_country").hover((function() {
      return $(this).find("div").css({
        height: $("#select_country li").length * 40
      });
    }), function() {
      return $(this).find("div").css({
        height: 0
      });
    });
    $("#select_country li").click(function(event) {
      $(this).parent().parent().parent().find("span").html($(this).html());
      $(this).parent().parent().css({
        height: 0
      });
      $(this).parent().parent().parent().attr("data-country-text", $(this).attr('data-country-text'));
      if ($(this).attr('data-country-text') === "United States") {
        $("#select_state").addClass("is-visible");
      } else {
        $("#select_state").find("span").html("All States");
        $("#select_state").attr("data-state-text", "").removeClass("is-visible");
      }
      return $allJobs.find("form").trigger("filter");
    });
    $("#select_state").hover((function() {
      return $(this).find("div").css({
        height: $("#select_state li").length * 40
      });
    }), function() {
      return $(this).find("div").css({
        height: 0
      });
    });
    $("#select_state li").click(function(event) {
      $(this).parent().parent().parent().find("span").html($(this).html());
      $(this).parent().parent().css({
        height: 0
      });
      $(this).parent().parent().parent().attr("data-state-text", $(this).attr('data-state-text'));
      return $allJobs.find("form").trigger("filter");
    });
    $("#select_brand").hover((function() {
      return $(this).find("div").css({
        height: $("#select_brand li").length * 40
      });
    }), function() {
      return $(this).find("div").css({
        height: 0
      });
    });
    $("#select_brand li").click(function(event) {
      $(this).parent().parent().parent().find("span").html($(this).html());
      $(this).parent().parent().css({
        height: 0
      });
      $(this).parent().parent().parent().attr("data-brand-text", $(this).attr('data-brand-text'));
      $allJobs.find("form").trigger("filter");
      if (window.location.hash !== ("#brand=" + ($(this).html()))) {
        return window.location.hash = "brand=" + ($(this).html());
      }
    });
    $("#sort_jobs").hover((function() {
      return $(this).find("div").css({
        height: $("#sort_jobs li").length * 40
      });
    }), function() {
      return $(this).find("div").css({
        height: 0
      });
    });
    $("#sort_jobs li").click(function(event) {
      $(this).parent().parent().parent().find("span").html($(this).html());
      $(this).parent().parent().css({
        height: 0
      });
      $(this).parent().parent().parent().attr("data-sort-text", $(this).attr('data-sort-text'));
      if ($(this).attr('data-sort-text') === 'date') {
        return tinysort('ol.jobs>li:not(.header)', {
          data: 'date',
          order: 'desc'
        });
      } else {
        return tinysort('ol.jobs>li:not(.header)', {
          data: $(this).attr('data-sort-text')
        });
      }
    });
    if (window.location.hash.indexOf("#brand=") === 0) {
      brand = window.location.hash.substring(7);
      $("#select_brand li[data-brand-text='" + brand + "']").trigger("click");
    }
    return $(".jobs").on("click", ">li:not(.header) ul li:not(.star-grey)", function(event) {
      var $job;
      $job = $(this);
      return window.open($job.parent().parent().data("url"), "job_" + ($job.parent().data("id")));
    });
  });
  if (!Modernizr.input.placeholder) {
    $("input.keyword").val($("input.keyword").attr("placeholder")).focus(function() {
      if ($(this).val() === $(this).attr("placeholder")) {
        return $(this).val(null);
      }
    }).blur(function() {
      if ($(this).val() === "") {
        return $(this).val($("input.keyword").attr("placeholder"));
      }
    });
  }
  return this;
};

window.initTopicShine = function() {
  var section;
  activateTopic("shine");
  calculateSectionAndContainerSize(true);
  $("#topic-shine").on("activate", ".topic-section", function(event, originalEvent) {
    var $section, offset, progress, sectionId;
    $section = $(this);
    if (originalEvent === void 0) {
      originalEvent = event;
    }
    sectionId = $section.data("section");
    window.ar.topics.shine.currentSection = sectionId;
    $section.addClass("active has-been-animated").siblings().removeClass("active");
    $("#topic-shine nav#position a[data-section='" + sectionId + "']").addClass("active").siblings().removeClass();
    if (originalEvent.type === "click" || originalEvent === "initFromHash") {
      unbindScrollDetect();
      offset = 140;
      if (is_smartphone) {
        offset = 32;
      }
      scrollPage($section.offset().top - offset, function() {
        if (Modernizr.history && originalEvent.type === "click") {
          history.pushState(sectionId, "SHINE - #" + (sectionId.toUpperCase()), "#" + sectionId);
        }
        return handleScrollingShine();
      });
    }
    if (originalEvent.type === "inview") {
      if (Modernizr.history) {
        history.pushState(sectionId, "SHINE - #" + (sectionId.toUpperCase()), "#" + sectionId);
      }
    }
    progress = $section.data("progress");
    return $("#topics-nav li.active").removeClass().addClass("active " + progress);
  });
  $(".big-arrow-down").click(function(event) {
    return $(".spotting-talent").trigger("activate", event);
  });
  $("#topic-shine").find("a.yellow-arrow-down, a.yellow-arrow-up").on("click", function(event) {
    event.preventDefault();
    return $("#topic-shine ." + ($(this).data("section"))).trigger("activate", event);
  });
  $("#topic-shine nav#position a").on("click", function(event) {
    event.preventDefault();
    $(this).addClass("active").siblings().removeClass();
    return $("#topic-shine ." + ($(this).data("section"))).trigger("activate", event);
  });
  if (window.location.hash !== "") {
    section = window.location.hash.replace("#", "");
    $("#topic-shine ." + section).trigger("activate", "initFromHash");
  } else {
    $("#topic-shine .start").trigger("activate", jQuery.Event("click"));
  }
  if (Modernizr.history) {
    window.removeEventListener("popstate", function() {});
    window.addEventListener("popstate", function(event) {
      if (event.state !== null) {
        unbindScrollDetect();
        return $("#topic-shine ." + event.state).trigger("activate", "initFromHash");
      }
    });
  }
  return handleScrollingShine();
};

window.handleScrollingShine = function() {
  if (is_mobile) {
    window.onscroll = function() {
      return $("#topic-shine .topic-section").each(function() {
        var $section;
        $section = $(this);
        if ($(window).scrollTop() >= $section.offset().top - ($(window).height() / 2)) {
          return $section.trigger("activate", event);
        }
      });
    };
    return;
  }
  return setTimeout((function() {
    return $(".scroll-detect").on("inview", function(event, isInView, topOrBottomOrBoth) {
      if (isInView && topOrBottomOrBoth === "both") {
        $(this).addClass("on");
        return $(this).parent().trigger("activate", event);
      } else {
        return $(this).removeClass("on");
      }
    });
  }), 500);
};
